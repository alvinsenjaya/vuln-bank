name: Security Scan and Docker Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security_scan_and_docker:
    name: Security Scan & Docker Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run TruffleHog Scan
        run: |
          docker run --rm -v $(pwd):/src trufflesecurity/trufflehog:latest \
            filesystem /src --json | tee trufflehog_results.json

      - name: Install Snyk CLI
        run: |
          curl -Lo snyk https://github.com/snyk/snyk/releases/latest/download/snyk-linux
          chmod +x snyk
          sudo mv snyk /usr/local/bin/

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Install Dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip3 install -r requirements.txt
          else
            echo "No requirements.txt found, skipping."
          fi

      - name: Run SCA Analysis
        run: snyk test --json | tee snyk_sca_results.json

      - name: Run SAST Analysis
        run: snyk code test --json | tee snyk_sast_results.json

      - name: Analyze Scan Reports
        run: |
          ALERT=false
      
          send_alert() {
            local alert_type=$1
            local message=$2
      
            # Send only a summary message (no attachments)
            PAYLOAD=$(jq -n --arg msg "$message" '{content: "\($msg)"}')
      
            # Send to Discord
            curl -H "Content-Type: application/json" -X POST -d "$PAYLOAD" ${{ secrets.DISCORD_WEBHOOK }}
          }
      
          # Check TruffleHog for credentials
          if [ -s trufflehog_results.json ]; then
            echo "TruffleHog found credentials!"
            ALERT=true
            send_alert "TruffleHog Alert" "⚠️ **TruffleHog Alert**: Potential credentials found! Check logs for details."
          fi
      
          # Check SCA for high/critical issues
          if jq -e '.vulnerabilities[] | select(.severity=="high" or .severity=="critical")' snyk_sca_results.json > /dev/null; then
            echo "SCA found high/critical vulnerabilities!"
            ALERT=true
            send_alert "SCA Alert" "⚠️ **SCA Alert**: High/Critical vulnerabilities found! Check logs for details."
          fi
      
          # Check SAST for warnings
          if [ -s snyk_sast_results.json ] && jq -e '.runs[].results[]? | select(.level=="warning")' snyk_sast_results.json > /dev/null 2>&1; then
            echo "SAST found warnings!"
            ALERT=true
            send_alert "⚠️ **SAST Alert**: Security warnings detected! Check logs for details."
          fi
      
          # Exit with failure if any alerts were triggered
          if [ "$ALERT" = true ]; then
            exit 1
          fi




      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_REPO }}:latest .
          docker push ${{ secrets.DOCKER_REPO }}:latest
